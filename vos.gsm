
TERMINAL_CODEX_PRINT            = 0u
TERMINAL_CODEX_CONTENT          = 1u
TERMINAL_CODEX_GETINPUTS        = 2u
TERMINAL_CODEX_SETCURSORPOS     = 3u
TERMINAL_CODEX_GETCURSORPOS     = 4u
TERMINAL_CODEX_BACKSPACE        = 5u
TERMINAL_CODEX_CLOSE            = 6u
TERMINAL_CODEX_TITLE            = 7u
TERMINAL_CODEX_CURSORCHAR       = 8u
TERMINAL_CODEX_INPUTCHECK       = 9u
TERMINAL_CODEX_CLEAR            = 10u
TERMINAL_CODEX_SETCURSORSYM     = 11u

DRAWMODE_NORMAL                 = 0u
DRAWMODE_FREEZED                = 1u

ch_(txt string) ubyte = #string

setTitleOfTerminal(txt title) {
    Terminal_channel_in.sendUInt@os(TERMINAL_CODEX_TITLE)
    Terminal_channel_in.sendText@os(title)
}

getCurrentChar() ubyte {
    Terminal_channel_in.sendUInt@os(TERMINAL_CODEX_CURSORCHAR)
    return Terminal_channel_out.receiveUInt@os()
}

setCursorSym(txt sym) {
    Terminal_channel_in.sendUInt@os(TERMINAL_CODEX_SETCURSORSYM)
    Terminal_channel_in.sendUInt@os(#sym)
}

println(txt message) {
    print(message + "\n")
}

print(txt message) {
    Terminal_channel_in.sendUInt@os(TERMINAL_CODEX_PRINT)
    Terminal_channel_in.sendText@os(message)
}

numberConsoleInput() ulong {
    Terminal_channel_in.sendUInt@os(TERMINAL_CODEX_INPUTCHECK)
    return Terminal_channel_out.receiveUInt@os()
}

getc() ubyte {
    buffer = ""
    for !buffer.Length() buffer = getTerminalBuffer()
    return buffer.CharAt(0)
}

gets() txt {
    done is ubyte = false
    begin_pos = getCursorPos()
    for !done {
        inbuffer = getTerminalBuffer()
        i is ulong = 0u
        for i < inbuffer.Length() {
            c = inbuffer.CharAt(i)
            if c == 24 {
                
            } else if c == 25 {
                
            } else if c == 26 {
                setCursorPos(getCursorPos() + 1u)
            } else if c == 27 {
                if getCursorPos() > begin_pos
                    setCursorPos(getCursorPos() - 1u)
            } else if c == (#"\n") {
                done = true
            } else if c == 8 {
                if begin_pos < getCursorPos() backspace()
            } else {
                print("".InsertChar(c))
            }
            i = i + 1u
        }
    }

    tcontent = getTerminalContent()
    setCursorPos(tcontent.Length())
    print("\n")
    return tcontent.subText@std(begin_pos, tcontent.Length())
}

cls() {
    Terminal_channel_in.sendUInt@os(TERMINAL_CODEX_CLEAR)
}

backspace() {
    Terminal_channel_in.sendUInt@os(TERMINAL_CODEX_BACKSPACE)
}

closeTerminal() {
    Terminal_channel_in.sendUInt@os(TERMINAL_CODEX_CLOSE)
}

getTerminalContent() txt {
    Terminal_channel_in.sendUInt@os(TERMINAL_CODEX_CONTENT)
    return Terminal_channel_out.receiveText@os()
}

getTerminalBuffer() txt {
    Terminal_channel_in.sendUInt@os(TERMINAL_CODEX_GETINPUTS)
    return Terminal_channel_out.receiveText@os()
}

getCursorPos() ulong {
    Terminal_channel_in.sendUInt@os(TERMINAL_CODEX_GETCURSORPOS)
    return Terminal_channel_out.receiveUInt@os()
}

setCursorPos(ulong pos) {
    Terminal_channel_in.sendUInt@os(TERMINAL_CODEX_SETCURSORPOS)
    Terminal_channel_in.sendUInt@os(pos)
}

TerminalWidth is ushort = 700
TerminalHeight is ushort = 400
TerminalIsRunning is ubyte = false

// Terminal IO

Terminal_channel_in = createChannel@os()
Terminal_channel_out = createChannel@os()

// Terminal Attributes

// 0 = Black
// 1 = White
// 2 = Green
// 3 = Red
// 4 = Blue
// 5 = Cyan
// 6 = Magenta
// 7 = Yellow
TerminalColorsRed   is ubyte[000u, 255u, 000u, 255u, 000u, 000u, 255u, 255u]
TerminalColorsGreen is ubyte[000u, 255u, 255u, 000u, 000u, 255u, 000u, 255u]
TerminalColorsBlue  is ubyte[000u, 255u, 000u, 000u, 255u, 255u, 255u, 000u]

TerminalFgColor is ushort = 1
TerminalBgColor is ushort = 0
TerminalFontSize is double = 1
TerminalGridWidth is double = 9
TerminalGridHeight is double = 16

HIDDENCURSOR = " "
NORMALCURSOR = "".InsertChar(22)

TerminalContent = ""
TerminalBuffer = ""
TerminalCursorSymbol = NORMALCURSOR
TerminalCursorPos = 0u

selectColor(Ref renderer, ushort index) {
    renderer.drawColor@SDL(
        TerminalColorsRed[index],
        TerminalColorsGreen[index], 
        TerminalColorsBlue[index], 
        255
    )
}

KEYMODE_NORMAL  = 0
KEYMODE_SHIFT   = 1
KEYMODE_COMMAND = 2
KEYMODE_OPTION  = 3
KEYMODE_CONTROL = 4

keymode is ubyte = KEYMODE_NORMAL

vos_onKeyDown(Ref keycode, Ref mousebutton) {

    //output("keycode '", "".InsertChar(keycode), "' = ", keycode)
    if keycode == 1073742049 keymode = KEYMODE_SHIFT
    else if keycode == 1073742054 || keycode == 1073742050 keymode = KEYMODE_OPTION
    else if keycode == 1073742048 keymode = KEYMODE_CONTROL
    else if keycode == 1073742051 keymode = KEYMODE_COMMAND
    
    if keymode == KEYMODE_COMMAND {
        if keycode == "+".CharAt(0) TerminalFontSize = TerminalFontSize + 0.5
        else if keycode == "-".CharAt(0) TerminalFontSize = TerminalFontSize - 0.5
    } else if keymode == KEYMODE_CONTROL {
        TerminalBuffer = TerminalBuffer.InsertChar (0)
        keymode = KEYMODE_NORMAL
    } else if keymode == KEYMODE_OPTION {
        if      keycode == "5".CharAt(0) TerminalBuffer = TerminalBuffer.InsertChar (#"[")
        else if keycode == "6".CharAt(0) TerminalBuffer = TerminalBuffer.InsertChar (#"]")
        else if keycode == "8".CharAt(0) TerminalBuffer = TerminalBuffer.InsertChar (#"{")
        else if keycode == "9".CharAt(0) TerminalBuffer = TerminalBuffer.InsertChar (#"}")
        else if keycode == "7".CharAt(0) TerminalBuffer = TerminalBuffer.InsertChar (#"|")
        else if keycode == "l".CharAt(0) TerminalBuffer = TerminalBuffer.InsertChar (#"@")
        else if keycode == "n".CharAt(0) TerminalBuffer = TerminalBuffer.InsertChar (#"~")
        else if keycode == 223 TerminalBuffer = TerminalBuffer.InsertChar (#"\\")
    } else if keymode == KEYMODE_SHIFT 
        if keycode >= "a".CharAt (0) && keycode <= "z".CharAt (0)
            TerminalBuffer = TerminalBuffer.InsertChar (keycode - 32)
        else if keycode == "4".CharAt (0)
            TerminalBuffer = TerminalBuffer.InsertChar (ch_("$"))
        else if keycode == "8".CharAt (0)
            TerminalBuffer = TerminalBuffer.InsertChar (ch_("("))
        else if keycode == "9".CharAt (0)
            TerminalBuffer = TerminalBuffer.InsertChar (ch_(")"))
        else if keycode == "+".CharAt (0)
            TerminalBuffer = TerminalBuffer.InsertChar (ch_("*"))
        else if keycode == "-".CharAt (0)
            TerminalBuffer = TerminalBuffer.InsertChar (ch_("_"))
        else if keycode == "7".CharAt (0)
            TerminalBuffer = TerminalBuffer.InsertChar (ch_("/"))
        else if keycode == "\t".CharAt (0)
            TerminalBuffer = TerminalBuffer + "\t"
        else if keycode == 94
            TerminalBuffer = TerminalBuffer.InsertChar (ch_(">"))
        else if keycode == "0".CharAt (0)
            TerminalBuffer = TerminalBuffer.InsertChar (ch_("="))
        else if keycode == "1".CharAt (0)
            TerminalBuffer = TerminalBuffer.InsertChar (ch_("!"))
        else if keycode == "2".CharAt (0)
            TerminalBuffer = TerminalBuffer.InsertChar (ch_("\""))
        else if keycode == "5".CharAt (0)
            TerminalBuffer = TerminalBuffer.InsertChar (ch_("%"))
        else if keycode == "6".CharAt (0)
            TerminalBuffer = TerminalBuffer.InsertChar (ch_("&"))
        else if keycode == ".".CharAt (0)
            TerminalBuffer = TerminalBuffer.InsertChar (ch_(":"))
        else if keycode == ",".CharAt (0)
            TerminalBuffer = TerminalBuffer.InsertChar (ch_(";"))
        else if keycode == 223
            TerminalBuffer = TerminalBuffer.InsertChar (ch_("?"))
        else if keycode == "#".CharAt(0)
            TerminalBuffer = TerminalBuffer.InsertChar (ch_("'"))
        else if keycode == " ".CharAt(0) { 
            TerminalBuffer = TerminalBuffer.InsertChar (keycode)
        } else if keycode == 8 {
            TerminalBuffer = TerminalBuffer.InsertChar (8)
            //if TerminalCursorPos != 0u && TerminalCursorPos < (TerminalContent.Length() + 1) {
            //    TerminalContent = TerminalContent.Remove (TerminalCursorPos - 1u)
            //    TerminalCursorPos = TerminalCursorPos - 1u
            //}
        } else if keycode == 13 {			
            TerminalBuffer = TerminalBuffer.InsertChar (#"\n")
        }
    else if keycode >= "a".CharAt (0) && keycode <= "z".CharAt (0) {
        TerminalBuffer = TerminalBuffer.InsertChar (keycode)
    } else if keycode >= 32 && keycode <= 64 {
        TerminalBuffer = TerminalBuffer.InsertChar (keycode)
    } else if keycode == " ".CharAt(0) { 
        TerminalBuffer = TerminalBuffer.InsertChar (keycode)
    } else if keycode == "\t".CharAt (0)
        TerminalBuffer = TerminalBuffer + "\t"
    else if keycode == 8 {
        TerminalBuffer = TerminalBuffer.InsertChar (8)
        //if TerminalCursorPos != 0u && TerminalCursorPos < (TerminalContent.Length() + 1) {
        //    TerminalContent = TerminalContent.Remove (TerminalCursorPos - 1u)
        //    TerminalCursorPos = TerminalCursorPos - 1u
        //}
    } else if keycode == 13 {			
        TerminalBuffer = TerminalBuffer.InsertChar (#"\n")
    } else if keycode == 60 {
        TerminalBuffer = TerminalBuffer.InsertChar (ch_("^"))
    } else if keycode == 94 {
        TerminalBuffer = TerminalBuffer.InsertChar (ch_("<"))
    } else if keycode == 1073741906 {
        TerminalBuffer = TerminalBuffer.InsertChar (24)
    } else if keycode == 1073741905 {
        TerminalBuffer = TerminalBuffer.InsertChar (25)
    } else if keycode == 1073741904 {
        TerminalBuffer = TerminalBuffer.InsertChar (27)
    } else if keycode == 1073741903 {
        TerminalBuffer = TerminalBuffer.InsertChar (26)
    }
}

vos_onKeyUp(Ref keycode, Ref mousebutton) {
    if keycode == 1073742049 keymode = KEYMODE_NORMAL
    else if keycode == 1073742054 || keycode == 1073742050 keymode = KEYMODE_NORMAL
    else if keycode == 1073742048 keymode = KEYMODE_NORMAL
    else if keycode == 1073742051 keymode = KEYMODE_NORMAL
}

vos_onMouseWheelMotion(long x, long y) {
    
}

vanguard vos_begin() {
    setup@SDL()

    window = createWindow@SDL()

    // Init Renderer
    renderer = window.createRenderer@SDL()
    setFont@Font(renderer.loadImage@SDL("/Applications/Gismolang/GTerminalFont.png"))
    fontSettings@Font(
        288,
        62,
        TerminalGridWidth,
        TerminalGridHeight
    )

    window.setTitle@SDL("Gismo Terminal")    
    window.setSize@SDL(TerminalWidth, TerminalHeight)
    window.resizable@SDL(true)
    window.center@SDL()

    window.show@SDL()

    TerminalIsRunning = true
    for TerminalIsRunning {
        event = true
        for event {
            event = window.checkEvent@SDL()
            if event == QUIT@SDL TerminalIsRunning = false
            else if event == KEYDOWN@SDL vos_onKeyDown(readKeyDownEvent@SDL(), 3)
			else if event == KEYUP@SDL || event == MOUSEBUTTONUP@SDL vos_onKeyUp(readKeyUpEvent@SDL(), 3)
			// else if event == RENDER_TARGETS_RESET@SDL drawImages (renderer)
			else if event == MOUSEBUTTONDOWN@SDL vos_onKeyDown (0u, readMouseButtonDownEvent@SDL ())
			else if event == MOUSEBUTTONUP@SDL vos_onKeyUp (0u, readMouseButtonUpEvent@SDL ())
			else if event == MOUSEWHEEL@SDL vos_onMouseWheelMotion (readMouseWheelX@SDL (), readMouseWheelY@SDL ())
        }
        // Update Window Data
        TerminalWidth = window.getWidth@SDL()
        TerminalHeight = window.getHeight@SDL()

        // Updating

        for Terminal_channel_in.listen@os() {
            codex = Terminal_channel_in.receiveUInt@os()
            if codex == TERMINAL_CODEX_PRINT {
                message = Terminal_channel_in.receiveText@os()
                TerminalContent = TerminalContent.insertText@std(
                    message, TerminalCursorPos - 1u
                )
                TerminalCursorPos = TerminalCursorPos + message.Length()
            } else if codex == TERMINAL_CODEX_CONTENT {
                Terminal_channel_out.sendText@os(TerminalContent)
            } else if codex == TERMINAL_CODEX_GETINPUTS {
                Terminal_channel_out.sendText@os(TerminalBuffer)
                TerminalBuffer = ""
            } else if codex == TERMINAL_CODEX_GETCURSORPOS {
                Terminal_channel_out.sendUInt@os(TerminalCursorPos)
            } else if codex == TERMINAL_CODEX_SETCURSORPOS {
                receivedTerminalCursorPos = Terminal_channel_in.receiveUInt@os()
                if receivedTerminalCursorPos <= TerminalContent.Length()
                    TerminalCursorPos = receivedTerminalCursorPos
            } else if codex == TERMINAL_CODEX_BACKSPACE {
                if TerminalCursorPos != 0u && TerminalCursorPos < (TerminalContent.Length() + 1) {
                    TerminalContent = TerminalContent.Remove (TerminalCursorPos - 1u)
                    TerminalCursorPos = TerminalCursorPos - 1u
                }
            } else if codex == TERMINAL_CODEX_CLOSE {
                TerminalIsRunning = false
            } else if codex == TERMINAL_CODEX_TITLE {
                window.setTitle@SDL(Terminal_channel_in.receiveText@os())
            } else if codex == TERMINAL_CODEX_CURSORCHAR {
                Terminal_channel_out.sendUInt@os(
                    TerminalContent.CharAt(TerminalCursorPos - 1u)
                )
            } else if codex == TERMINAL_CODEX_INPUTCHECK {
                Terminal_channel_out.sendUInt@os(TerminalBuffer.Length())
            } else if codex == TERMINAL_CODEX_CLEAR {
                TerminalContent = ""
                TerminalCursorPos = 0u
            } else if codex == TERMINAL_CODEX_SETCURSORSYM {
                TerminalCursorSymbol = "".InsertChar(Terminal_channel_in.receiveUInt@os())
            }
        }

        fontFgColor@Font(
            TerminalColorsRed[TerminalFgColor],
            TerminalColorsGreen[TerminalFgColor],
            TerminalColorsBlue[TerminalFgColor]
        )
        fontBgColor@Font(
            TerminalColorsRed[TerminalBgColor],
            TerminalColorsGreen[TerminalBgColor],
            TerminalColorsBlue[TerminalBgColor]
        )
        currentSize@Font = TerminalFontSize

        renderer.selectColor(TerminalFgColor)
        renderer.drawText@Font(TerminalContent.insertText@std(TerminalCursorSymbol + "\b", TerminalCursorPos - 1u), 0, 0)

        renderer.present@SDL()
        renderer.selectColor(TerminalBgColor)
        renderer.clearRenderer@SDL()

        delay@SDL(5)
    }

    renderer.destroyRenderer@SDL()
    window.destroyWindow@SDL()

    Terminal_channel_in.closeChannel@os()
    Terminal_channel_out.closeChannel@os()

    quit@SDL()
    exit(0)
}


running is ubyte = false

frame = 0
frames = 0

bg_r is ubyte = 0
bg_g is ubyte = 0
bg_b is ubyte = 0

delay_value = 5

delta_time = 0.0
fps = 0

stop () {
	running = false
}

receiveClear is ubyte = false

clearDisplay () {
	receiveClear = true
}

onKeyDown := OnKeyDown
OnKeyDown(Ref keycode, Ref mousebutton);

onKeyUp := OnKeyUp
OnKeyUp(Ref keycode, Ref mousebutton);

drawImages := DrawImages
DrawImages(Ref renderer);

onMouseWheelMotion := OnMouseWheelMotion
OnMouseWheelMotion(long x, long y);

onQuit := OnQuit
OnQuit() {
	stop()
}

initApp := InitApp
InitApp(Ref window, Ref renderer);

cleanUp := CleanUp
CleanUp(Ref window, Ref renderer);

update := Update
Update(Ref window);

draw := Draw
Draw(Ref renderer);

init (txt title, ulong width, ulong height, ulong ActionPerFrames) {
	//setup@sdl()
	window is Ref = createWindow@sdl()
	renderer is Ref = createRenderer@sdl(window)
	
	setTitle@sdl(window, title)
	setSize@sdl(window, width, height)
	initApp (window, renderer)
	show@sdl(window)

	NOW = getPerformanceCounter@sdl ()
	LAST = 0u

	//drawImages (renderer)

	running = true
	for running {
		event = true
		for event {
			event = checkEvent@sdl(window)
			if event == QUIT@sdl onQuit()
			else if event == KEYDOWN@sdl onKeyDown(readKeyDownEvent@sdl(), 3)
			else if event == KEYUP@sdl || event == MOUSEBUTTONUP@sdl onKeyUp(readKeyUpEvent@sdl(), 3)
			else if event == RENDER_TARGETS_RESET@sdl drawImages (renderer)
			else if event == MOUSEBUTTONDOWN@sdl onKeyDown (0u, readMouseButtonDownEvent@sdl ())
			else if event == MOUSEBUTTONUP@sdl onKeyUp (0u, readMouseButtonUpEvent@sdl ())
			else if event == MOUSEWHEEL@sdl onMouseWheelMotion (readMouseWheelX@sdl (), readMouseWheelY@sdl ())
		}


		if frame > ActionPerFrames {

			LAST = NOW
			NOW = getPerformanceCounter@sdl ()

			delta_time = (((NOW as double - LAST as double) *1000.0) as double / (getPerformanceFrequency@sdl ()) as double) as double

			fps = 1.0 / delta_time
			update(window)
			draw(renderer)
			frame = 0

			// repaint

			present@sdl(renderer)
			if receiveClear {
				drawColor@sdl(renderer, bg_r, bg_g, bg_b, 255)
				clearRenderer@sdl(renderer)
				reveiceClear = false
			}
		}


		if delay_value != 0
			delay@sdl(delay_value)

		frame = frame + 1
		frames = frames + 1
	}

	cleanUp (window, renderer)

	destroyRenderer@sdl(renderer)
	destroyWindow@sdl(window)
	
	quit@sdl()
}



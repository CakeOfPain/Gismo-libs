include * @Gismo.UI.Frame

button(Frame frame, txt message) bool {
	io := frame.io
	mouse := io.mouse
	style := frame.style

	elementID := frame.getElementId()

	btnInnerOffset := 5

	w := widthOfText@SDL(style.fonthandle, message) + (btnInnerOffset * 2)
	h := heightOfText@SDL(style.fonthandle, message) + (btnInnerOffset * 2)

	pos is pack(frame, w, h)

	x := pos[0]
	y := pos[1]

	btdStdColor := style.themeColor2
	btdHovColor := style.themeColor3
	btdClkColor := style.themeColor4

	color := btdStdColor

	pressed := false
	if (x < mouse.x) && (y < mouse.y) && (mouse.x < (x+w)) && (mouse.y < (h+y)) {
		color = btdHovColor
		if mouse.tglbtn == 0 {
			color = btdClkColor
			pressed = true
			frame.setSelected(elementID)
		}
	}

	frame.elements += fmt(
		"color,", color, ";",
		{
			underline := ";"
			if frame.getSelected() == elementID
				underline = fmt("line,", x,",",y+h+5,",",x+w,",",y+h+5,";")

			underline
		},
		"fillRect,",x,",",y,",",w,",",h,";",
		"rect,",x-2,",",y-2,",",w+4,",",h+4,";",
		"color,",style.themeColor1,";",
		"text,",message.replace@std(",", "&cma&").replace@std(";", "&smicln&"),",",x+btnInnerOffset,",",y+btnInnerOffset,";"
	)

	return pressed
}

roundButton(Frame frame, txt message) bool {
	io := frame.io
	mouse := io.mouse
	style := frame.style

	elementID := frame.getElementId()

	btnInnerOffset := 5

	textOffsetX = 0
	
	w := widthOfText@SDL(style.fonthandle, message) + (btnInnerOffset * 2)
	if message.Length() < 2 {
		w = widthOfText@SDL(style.fonthandle, message) * 2 + (btnInnerOffset * 2)
		textOffsetX = widthOfText@SDL(style.fonthandle, message) / 2
	}
	
	h := heightOfText@SDL(style.fonthandle, message) + (btnInnerOffset * 2)

	pos is pack(frame, w, h)

	x := pos[0]
	y := pos[1]

	btdStdColor := style.themeColor2
	btdHovColor := style.themeColor3
	btdClkColor := style.themeColor4

	color := btdStdColor

	pressed := false
	if (x < mouse.x) && (y < mouse.y) && (mouse.x < (x+w)) && (mouse.y < (h+y)) {
		color = btdHovColor
		if mouse.tglbtn == 0 {
			color = btdClkColor
			pressed = true
			frame.setSelected(elementID)
		}
	}

	lcircle := fmt("circle,",x+h/2,",",y+(h/2),",",h/2,";")
	rcircle := fmt("circle,",x+w-h/2,",",y+(h/2),",",h/2,";")
	
	frame.elements += fmt(
		"color,", color, ";",
		{
			underline := ";"
			if frame.getSelected() == elementID
				underline = fmt("line,", x,",",y+h+5,",",x+w,",",y+h+5,";")

			underline
		},
		"fillRect,",x+h/2,",",y,",",w-h,",",h,";",
		lcircle,
		rcircle,
		"color,",style.themeColor1,";",
		"text,",message.replace@std(",", "&cma&").replace@std(";", "&smicln&"),",",x+btnInnerOffset+textOffsetX,",",y+btnInnerOffset,";"
	)

	return pressed
}

label(Frame frame, txt message) {
	style := frame.style
	
	elementID := frame.getElementId()

	w := widthOfText@SDL(style.fonthandle, message)
	h := heightOfText@SDL(style.fonthandle, message)

	pos is pack(frame, w, h)

	x := pos[0]
	y := pos[1]

	linewrapped_message := ""
	for i = 0; i < message.Length(); i+=1 {
		w = widthOfText@SDL(style.fonthandle, linewrapped_message + "".InsertChar(message.CharAt(i)))
		if (x + w) > frame.width {
			linewrapped_message = linewrapped_message.InsertChar('\n')
		}
		linewrapped_message = linewrapped_message.InsertChar(message.CharAt(i))
	}

	frame.elements += fmt(
		"color,", style.themeColor1, ";",
		"fillRect,",x,",",y,",",w,",",h,";",
		"color,",style.themeColor2,";",
		"text,",linewrapped_message.replace@std(",", "&cma&").replace@std(";", "&smicln&"),",",x,",",y,";"
	)
}

markedLabel(Frame frame, txt message) {
	style := frame.style

	elementID := frame.getElementId()

	w := widthOfText@SDL(style.fonthandle, message)
	h := heightOfText@SDL(style.fonthandle, message)

	pos is pack(frame, w, h)

	x := pos[0]
	y := pos[1]

	linewrapped_message := ""
	for i = 0; i < message.Length(); i+=1 {
		w = widthOfText@SDL(style.fonthandle, linewrapped_message + "".InsertChar(message.CharAt(i)))
		if (x + w) > frame.width {
			linewrapped_message = linewrapped_message.InsertChar('\n')
		}
		linewrapped_message = linewrapped_message.InsertChar(message.CharAt(i))
	}

	frame.elements += fmt(
		"color,", style.themeColor5, ";",
		"fillRect,",x,",",y,",",w,",",h,";",
		"color,",style.themeColor2,";",
		"text,",linewrapped_message.replace@std(",", "&cma&").replace@std(";", "&smicln&"),",",x,",",y,";"
	)
}